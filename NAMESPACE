# Generated by roxygen2: do not edit by hand

S3method(.access_result,character)
S3method(.access_result,default)
S3method(.access_result,list)
S3method(InfoWindow,default)
S3method(InfoWindow,list)
S3method(JsonType,Date)
S3method(JsonType,POSIXct)
S3method(JsonType,character)
S3method(JsonType,default)
S3method(JsonType,factor)
S3method(JsonType,integer)
S3method(JsonType,logical)
S3method(JsonType,numeric)
S3method(checkPalettes,"function")
S3method(checkPalettes,default)
S3method(checkPalettes,list)
S3method(constructWaypoints2,default)
S3method(constructWaypoints2,list)
S3method(determinePalette,"function")
S3method(determinePalette,list)
S3method(findEncodedColumn,default)
S3method(findEncodedColumn,sfencoded)
S3method(flattenLegend,list)
S3method(flattenLegend,logical)
S3method(formatLegendValue,POSIXct)
S3method(formatLegendValue,default)
S3method(formatLegendValue,numeric)
S3method(generatePalette,default)
S3method(generatePalette,factor)
S3method(generatePalette,numeric)
S3method(getLegendType,default)
S3method(getLegendType,numeric)
S3method(iterate_access_result,character)
S3method(iterate_access_result,list)
S3method(normaliseData,default)
S3method(normaliseData,sf)
S3method(normaliseSfData,default)
S3method(normaliseSfData,sf)
S3method(normaliseSfData,sfencoded)
S3method(normalise_sf,default)
S3method(normalise_sf,sf)
S3method(normalise_sf,sfencoded)
S3method(print,googleway_api)
S3method(resultType,character)
S3method(resultType,default)
S3method(resultType,list)
S3method(urlCheck,character)
S3method(urlCheck,default)
S3method(urlCheck,url)
S3method(validateGeojson,character)
S3method(validateGeojson,default)
S3method(validateGeojson,json)
S3method(validateLocation,character)
S3method(validateLocation,data.frame)
S3method(validateLocation,default)
S3method(validateLocation,list)
S3method(validateLocation,numeric)
S3method(validateLocationQuery,character)
S3method(validateLocationQuery,numeric)
S3method(validateLocations,character)
S3method(validateLocations,data.frame)
S3method(validateLocations,default)
S3method(validateLocations,numeric)
S3method(validatePanoFov,default)
S3method(validatePanoFov,numeric)
S3method(validatePanoHeading,default)
S3method(validatePanoHeading,numeric)
S3method(validateStyle,character)
S3method(validateStyle,default)
S3method(validateStyle,json)
S3method(validateStyle,list)
S3method(validateStyleUpdate,character)
S3method(validateStyleUpdate,default)
S3method(validateStyleUpdate,list)
export("%>%")
export(access_result)
export(add_bicycling)
export(add_circles)
export(add_dragdrop)
export(add_drawing)
export(add_geojson)
export(add_heatmap)
export(add_kml)
export(add_markers)
export(add_overlay)
export(add_polygons)
export(add_polylines)
export(add_rectangles)
export(add_traffic)
export(add_transit)
export(clear_bicycling)
export(clear_bounds)
export(clear_circles)
export(clear_drawing)
export(clear_fusion)
export(clear_geojson)
export(clear_heatmap)
export(clear_keys)
export(clear_kml)
export(clear_markers)
export(clear_overlay)
export(clear_polygons)
export(clear_polylines)
export(clear_rectangles)
export(clear_search)
export(clear_traffic)
export(clear_transit)
export(decode_pl)
export(direction_instructions)
export(direction_legs)
export(direction_points)
export(direction_polyline)
export(direction_routes)
export(direction_steps)
export(distance_destinations)
export(distance_elements)
export(distance_origins)
export(elevation)
export(elevation_location)
export(encode_pl)
export(geocode_address)
export(geocode_address_components)
export(geocode_coordinates)
export(geocode_place)
export(geocode_type)
export(google_directions)
export(google_dispatch)
export(google_distance)
export(google_elevation)
export(google_find_place)
export(google_geocode)
export(google_keys)
export(google_map)
export(google_mapOutput)
export(google_map_directions)
export(google_map_panorama)
export(google_map_search)
export(google_map_update)
export(google_map_url)
export(google_map_view)
export(google_nearestRoads)
export(google_place_autocomplete)
export(google_place_details)
export(google_places)
export(google_reverse_geocode)
export(google_snapToRoads)
export(google_speedLimits)
export(google_streetview)
export(google_timezone)
export(invoke_method)
export(map_styles)
export(nearest_roads_coordinates)
export(place)
export(place_fields)
export(place_hours)
export(place_location)
export(place_name)
export(place_next_page)
export(place_open)
export(place_type)
export(remove_drawing)
export(renderGoogle_map)
export(set_key)
export(update_circles)
export(update_geojson)
export(update_heatmap)
export(update_polygons)
export(update_polylines)
export(update_rectangles)
export(update_style)
import(htmltools)
import(htmlwidgets)
import(shiny)
importFrom(curl,curl)
importFrom(grDevices,col2rgb)
importFrom(jsonlite,fromJSON)
importFrom(magrittr,"%>%")
importFrom(stats,setNames)
