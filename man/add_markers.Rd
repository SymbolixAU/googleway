% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/google_map_layer_marker.R
\name{add_markers}
\alias{add_markers}
\title{Add markers}
\usage{
add_markers(
  map,
  data = get_map_data(map),
  id = NULL,
  colour = NULL,
  border_colour = NULL,
  glyph_colour = NULL,
  scale = 1,
  lat = NULL,
  lon = NULL,
  polyline = NULL,
  title = NULL,
  draggable = NULL,
  opacity = NULL,
  label = NULL,
  info_window = NULL,
  mouse_over = NULL,
  mouse_over_group = NULL,
  marker_icon = NULL,
  layer_id = NULL,
  cluster = FALSE,
  cluster_options = list(),
  update_map_view = TRUE,
  digits = 4,
  load_interval = 0,
  focus_layer = FALSE,
  close_info_window = FALSE
)
}
\arguments{
\item{map}{a googleway map object created from \code{google_map()}}

\item{data}{data frame containing the data to use in the layer. If Null, the
data passed into \code{google_map()} will be used.}

\item{id}{string specifying the column containing an identifier for a shape}

\item{colour}{string (hex string representation) specifying the column of containing the 'colour' to use for
the markers, or an single hex string to use for all the markers.}

\item{border_colour}{string (hex string representation) specifying the column of containing the'border colour'
to use for the markers. The colour should be specified as a hex string (e.g. "#FF0000"),
or an single hex string to use for all the markers.}

\item{glyph_colour}{string (hex string representation) specifying the column of containing the 'glyph colour'
(the center of the marker), or an single hex string to use for all the markers.
The colour should be specified as a hex string (e.g. "#FF0000")}

\item{scale}{number specifying the scale of the marker.}

\item{lat}{string specifying the column of \code{data} containing the 'latitude'
coordinates. If left NULL, a best-guess will be made}

\item{lon}{string specifying the column of \code{data} containing the 'longitude'
coordinates. If left NULL, a best-guess will be made}

\item{polyline}{string specifying the column of \code{data} containing the encoded polyline.
For circles and markers the encoded string will represent a single point.}

\item{title}{string specifying the column of \code{data} containing the 'title'
of the markers. The title is displayed when you hover over a marker. If blank,
no title will be displayed for the markers.}

\item{draggable}{string specifying the column of \code{data} defining if the
marker is 'draggable' (either TRUE or FALSE)}

\item{label}{string specifying the column of \code{data} defining the character
to appear in the centre of the marker. Values will be coerced to strings, and
only the first character will be used.}

\item{info_window}{string specifying the column of data to display in an info
window when a shape is clicked.}

\item{mouse_over}{string specifying the column of data to display when the
mouse rolls over the shape}

\item{mouse_over_group}{string specifying the column of data specifying which
groups of shapes to highlight on mouseover}

\item{marker_icon}{string specifying the column of data containing a link/URL to
an image to use for a marker}

\item{layer_id}{single value specifying an id for the layer. Use this value to
distinguish between shape layers for when using any \code{update_} function, and
for separating legends.}

\item{cluster}{logical indicating if co-located markers should be clustered
when the map zoomed out}

\item{cluster_options}{list of options used in clustering. See details.}

\item{update_map_view}{logical specifying if the map should re-centre according to
the shapes}

\item{digits}{integer. Use this parameter to specify how many digits (decimal places)
should be used for the latitude / longitude coordinates.}

\item{load_interval}{time in miliseconds to wait between plotting each shape}

\item{focus_layer}{logical indicating if the map should re-centre according to this layer}

\item{close_info_window}{logical indicating if all \code{info_windows} should close
when the user clicks on the map}
}
\description{
Add markers to a google map
}
\details{
Cluster Options can be supplied as a named list. The available names are

\itemize{
  \item{minZoom (number - default 0) - The minimum zoom level at which clusters are generated.}
  \item{maxZoom (number - defualt 16) - The maximum zoom level at which clusters are generated.}
  \item{minPoints (number - default 2) - Minimum number of points to form a cluster.}
  \item{radius (number - default 40) - Cluster radius, in pixels.}
  \item{extent (number - default 512) - (Tiles) Tile extent. Radius is calculated relative to this value.}
  \item{nodeSize (number - defualt 64) - Size of the KD-tree leaf node. Affects performance.}
}

opts <- list(
  minimumClusterSize = 3
)
}
\examples{
\dontrun{

map_key <- "your api key"

google_map(
  key = map_key
  , data = tram_stops
  ) \%>\%
 add_markers(
   lat = "stop_lat"
   , lon = "stop_lon"
   , title = "stop_name"  ## shown when hovering
   , label = "stop_id"    ## shown in center of marker
   , info_window = "stop_name" ## shown when clicking on marker
   )

## Display the info_window using mouse_over

google_map(
  key = map_key
  , data = tram_stops
  ) \%>\%
 add_markers(
   lat = "stop_lat"
   , lon = "stop_lon"
   , title = "stop_name"  ## shown when hovering
   , label = "stop_id"    ## shown in center of marker
   , mouse_over = "stop_name" ## shown when hovering over a marker
   )

## Use mouse_over_group to highlight groups of markers

df <- tram_stops
df$group <- sample(1:5, size = nrow(df), replace = TRUE)
google_map(
  key = map_key
  , data = df
  ) \%>\%
 add_markers(
   lat = "stop_lat"
   , lon = "stop_lon"
   , title = "stop_name"  ## shown when hovering
   , label = "stop_id"    ## shown in center of marker
   , mouse_over_group = "group"
   )

## Colouring markers
google_map(
  key = map_key
  , data = tram_stops
  ) \%>\%
 add_markers(
   lat = "stop_lat"
   , lon = "stop_lon"
   , title = "stop_name"       ## shown when hovering
   , label = "stop_id"         ## shown in center of marker
   , info_window = "stop_name" ## shown when clicking on marker
   , colour = "#0000FF"        ## Blue
   , glyph_colour = "#00FF00"  ## Green
   , border_colour = "#000000" ## Black
   )

## Scale markers
df <- tram_stops
df$scale <- sample(1:5, size = nrow(df), replace = TRUE)
google_map(
  key = map_key
  , data = df
  ) \%>\%
 add_markers(
   lat = "stop_lat"
   , lon = "stop_lon"
   , colour = "#0000FF"        ## Blue
   , glyph_colour = "#00FF00"  ## Green
   , border_colour = "#000000" ## Black
   , scale = "scale"
   )

## using marker icons
iconUrl <- paste0("https://developers.google.com/maps/documentation/",
"javascript/examples/full/images/beachflag.png")

tram_stops$icon <- iconUrl

google_map(
  key = map_key
  , data = tram_stops
  ) \%>\%
  add_markers(
    lat = "stop_lat"
    , lon = "stop_lon"
    , marker_icon = "icon"
  )

## Clustering
google_map(
  key = map_key
  , data = tram_stops
  ) \%>\%
 add_markers(
   lat = "stop_lat"
   , lon = "stop_lon"
   , info_window = "stop_name"
   , cluster = TRUE
   , cluster_options = list( minPoints = 2, radius = 100)
   )

}
}
